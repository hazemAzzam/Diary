<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>